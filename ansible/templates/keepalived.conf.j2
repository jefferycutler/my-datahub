global_defs {
   # The router_id should be unique for each node.
   router_id {{ ansible_hostname }}
   # For security, run scripts as a specific user.
   script_user root
   enable_script_security
}

# This script checks if the haproxy process is listening on the API port.
# If it fails, this node's priority is lowered, triggering a failover.
vrrp_script chk_haproxy {
    script "/usr/local/bin/check_haproxy.sh"
    interval 2
    weight 2
    fall 2  # require 2 failures to fail
    rise 2  # require 2 successes to recover
}

vrrp_instance VI_1 {
    # The first host in the inventory is the default MASTER
    state {% if groups['lb'][0] == inventory_hostname %}MASTER{% else %}BACKUP{% endif %}
    
    interface {{ keepalived_interface }}
    virtual_router_id 51 # Must be the same for all nodes in the HA group
    priority {{ 150 - (groups['lb'].index(inventory_hostname)) }} # Higher priority for earlier hosts in inventory

    # Do not preempt for backup nodes. This prevents the original master from
    # reclaiming the VIP immediately upon returning online, avoiding "flapping".
    {% if groups['lb'][0] != inventory_hostname %}
    nopreempt
    {% endif %}

    advert_int 1
    authentication {
        auth_type PASS
        auth_pass {{ keepalived_vrrp_password }}
    }
    virtual_ipaddress {
        {{ k3s_shared_ip }}/32
    }
    track_script {
        chk_haproxy
    }
}